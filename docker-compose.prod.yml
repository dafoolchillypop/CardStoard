version: "3.8"

services:
  stoardb:
    image: postgres:15
    container_name: stoardb
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cardstoardb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      start_period: 10s
    # ðŸš¨ Note: no ports section, Postgres is private inside Docker network

  stoarback:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: stoarback
    restart: unless-stopped
    depends_on:
      - stoardb
    environment:
      DATABASE_URL: postgresql://postgres:postgres@stoardb:5432/cardstoardb
      FRONTEND_ORIGIN: https://cardstoard.com
    expose:
      - "8000"
    # ðŸš¨ Removed bind mounts + --reload, backend runs as clean prod container

  stoarfront:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: stoarfront
    restart: unless-stopped
    depends_on:
      - stoarback
    # ðŸš¨ In prod, frontend is built into static assets during image build
    # No port mapping needed; served through nginx

  nginx:
    image: nginx:1.27-alpine
    container_name: cardstoard-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx.prod.conf:/etc/nginx/conf.d/default.conf
      - certs:/etc/letsencrypt
    depends_on:
      - stoarfront
      - stoarback

volumes:
  postgres_data:
  certs:
